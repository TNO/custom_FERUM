function [ r, seed ] = user ( m, n, seed )

%% USER samples points in a user-specified region with given density.
%
%  Discussion:
%
%    This routine can be used to 
%
%    * specify an interesting initial configuration for the data,
%      by specifing that USER be used for initialization (INIT = 3);
%
%    * specify the shape of the computational region, by specifying
%      that sample points are to be generated by this routine, 
%      (SAMPLE = 3) and then returning sample points uniformly at random.
%
%    * specify the distribution or density function, by specifying
%      that sample points are to be generated by this routine, 
%      (SAMPLE = 3 ) and then returning sample points according to a 
%      given probability density function.
%
%  Author:
%
%    John Burkardt
%
%  Modified:
%
%    23 June 2005
%
%  Parameters:
%
%    Input, integer DIM_NUM, the spatial dimension.
%
%    Input, integer N, the number of sample points desired.
%
%    Input, integer SEED, a seed for the random number generator.
%
%    Output, real R(DIM_NUM,N), a set of N sample values.
%
%    Output, integer SEED, the updated seed.  
%
  
%
%  We sample points in the unit circle uniformly.
%
%n=100
% angle(1:n) = 2.0 * pi * rand(1,n);
%  radius(1:n) = sqrt ( rand(1,n) );
%  r(1,1:n) = radius(1:n) .* cos ( angle(1:n) );
%  r(2,1:n) = radius(1:n) .* sin ( angle(1:n) );

allu = inv_norm_cdf(twister(m,n));
alla = allu ./ ( ones(m,1) * dot(allu,allu).^0.5 );
allu = twister(1,n);
allr = allu.^(1/m);

r = ( ones(m,1) * allr ) .* alla;

% plot(r(1,:),r(2,:),'b.')